// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/taylankasap/message-sender/api (interfaces: ResumePauser)
//
// Generated by this command:
//
//	mockgen --package=api --destination=mock_resume_pauser.go . ResumePauser
//

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockResumePauser is a mock of ResumePauser interface.
type MockResumePauser struct {
	ctrl     *gomock.Controller
	recorder *MockResumePauserMockRecorder
	isgomock struct{}
}

// MockResumePauserMockRecorder is the mock recorder for MockResumePauser.
type MockResumePauserMockRecorder struct {
	mock *MockResumePauser
}

// NewMockResumePauser creates a new mock instance.
func NewMockResumePauser(ctrl *gomock.Controller) *MockResumePauser {
	mock := &MockResumePauser{ctrl: ctrl}
	mock.recorder = &MockResumePauserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResumePauser) EXPECT() *MockResumePauserMockRecorder {
	return m.recorder
}

// Pause mocks base method.
func (m *MockResumePauser) Pause() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Pause")
}

// Pause indicates an expected call of Pause.
func (mr *MockResumePauserMockRecorder) Pause() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pause", reflect.TypeOf((*MockResumePauser)(nil).Pause))
}

// Resume mocks base method.
func (m *MockResumePauser) Resume() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Resume")
}

// Resume indicates an expected call of Resume.
func (mr *MockResumePauserMockRecorder) Resume() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resume", reflect.TypeOf((*MockResumePauser)(nil).Resume))
}
